type Vote @entity {
  id: ID!
  voter: Bytes!
  txHash: Bytes!
  proposal: Proposal!
  votes: BigInt!
  isPro: Boolean!
}

type ProposalAction @entity {
  id: ID!
  contract: Bytes!
  signature: String!
  proposal: Proposal!
  calldata: Bytes!
}

type Proposal @entity {
  id: ID!
  proposalId: BigInt!
  contractAddress: Bytes!
  eta: BigInt
  description: String!
  startBlock: BigInt!
  startDate: BigInt!
  endBlock: BigInt!
  proposer: Bytes!
  forVotesAmount: BigInt!
  againstVotesAmount: BigInt!
  votes: [Vote!]! @derivedFrom(field: "proposal")
  actions: [ProposalAction!]! @derivedFrom(field: "proposal")
}

type StakeEvent @entity {
  id: ID!
  staker: Bytes!
  amount: BigInt!
  lockedUntil: BigInt!
  totalStaked: BigInt!
  transactionHash: Bytes!
}
